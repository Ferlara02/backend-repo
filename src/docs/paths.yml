paths:
  /api/products:
    post:
      tags:
      - Products
      summary: Creacion de producto en base de datos.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/BodyAddProduct"
        required: true
      responses:
        200:
          description: Se creó el producto correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/CreateProduct'
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/notFound'
        404:
          description: Error de validacion del schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/validationError'
    get:
      tags:
      - Products
      summary: Lista de todos los productos, paginados cada 10. Se puede establecer el limite y/o la página deseada por Query
        - page?
        - limit?
      responses:
        200: 
          description: Lista de productos.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/getAllProducts'
  /api/products/{id}:
    get:
      tags:
        - Products
      summary: Obtener producto por ID.
      parameters:
        - in: path
          name: id
          required: true
          description: id referente al producto.
          schema:
            type: string
      responses:
        200:
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/getProductById'
        404:
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/notFound'
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/validationError'
    put:
      tags:
        - Products
      summary: Actualizar producto
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/BodyAddProduct"
      parameters:
        - in: path
          name: id
          required: true
          description: id referente al producto.
          schema:
            type: string
      responses:
        200:
          description: Producto actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/getProductById'
        404:
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/notFound'
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/validationError'
    delete:
      tags:
        - Products
      summary: Borrar producto
      parameters:
        - in: path
          name: id
          required: true
          description: id referente al producto.
          schema:
            type: string
      responses:
        200:
          description: Producto borrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/getProductById'
        404:
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/notFound'
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/validationError'
  /api/carts/{id}:
    get:
      tags:
      - Cart
      summary: Obtener carrito por ID
      parameters:
        - in: path
          name: id
          required: true
          description: id referente al carrito.
          schema:
            type: string
      responses:
        200:
          description: Carrito obtenido
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Cart/getCartById'
        404:
          description: Carrito no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/notFound'
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/validationError'
    delete:
      tags:
        - Cart
      summary: Vaciar carrito seleccionado
      parameters:
        - in: path
          name: id
          required: true
          description: ID referente al carrito.
          schema:
            type: string
      responses:
        200:
          description: Carrito borrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Cart/addProdToCart'
        404:
          description: Carrito no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/notFound'
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/validationError'
  /api/carts:
    post:
      tags:
        - Cart
      summary: Crear un carrito
      responses:
        200:
          description: Carrito creado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Cart/createCart'
        404:
          description: Carrito no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/notFound'
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/validationError'
  /api/carts/{id}/products/{prodId}:
    post:
      tags:
        - Cart
      summary: Agregar un producto a un carrito en especifico
      parameters:
        - in: path
          name: id
          required: true
          description: ID referente al carrito.
          schema:
            type: string
        - in: path
          name: prodId
          required: true
          description: ID referente al producto
          schema:
            type: string
      responses:
        200:
          description: Producto agregado al carrito
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Cart/addProdToCart'
        404:
          description: Carrito o producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/notFound'
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/validationError'
    put:
      tags: 
        - Cart
      summary: Actualizar cantidad de producto ya agregado
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - quantity
              properties:
                quantity:
                  type: number
                  description: Cantidad a remplazar del producto (no se suma)
                  example: 4
      parameters:
        - in: path
          name: id
          required: true
          description: ID referente al carrito.
          schema:
            type: string
        - in: path
          name: prodId
          required: true
          description: ID referente al producto
          schema:
            type: string
      responses:
        200:
          description: Cantidad actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Cart/addProdToCart'
        404:
          description: Carrito o producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/notFound'
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/validationError'
    delete:
      tags:
        - Cart
      summary: Borrar producto seleccionado del carrito seleccionado
      parameters:
        - in: path
          name: id
          required: true
          description: ID referente al carrito.
          schema:
            type: string
        - in: path
          name: prodId
          required: true
          description: ID referente al producto
          schema:
            type: string
      responses:
        200:
          description: Carrito borrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Cart/addProdToCart'
        404:
          description: Carrito o producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/notFound'
        500:
          description: Error de servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/validationError'